var c = require("../../js/vcx.js");
var assert = require('assert');
var board = require("../../js/board.js");

describe('test checkmate', function() {

  it(`it should be OK`, function() {
    // 冲四，活三，胜
    b = [
      [0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 1, 0, 0, 0, 0],
      [0, 0, 0, 2, 2, 0, 0, 0],
      [0, 0, 0, 1, 1, 1, 2, 0],
      [0, 0, 1, 2, 2, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0]
    ];
    var start = + new Date;
    board.init(b);
    // 循环100次，因为这个时间太短了
    var count = 100;
    var p;
    while (count--) p = c.vct(1, 10);
    console.log(p)
    console.log(`用时${+new Date - start}ms`);
    assert.ok(p);
  });

  it(`一个很慢的算杀例子`, function() {
    //进攻 [2, 7] 无法获胜，白方可以通过连续三次冲四挡住双三攻击，[3, 9], [6, 9], [4, 9]
    b = [
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 2, 1, 2, 1, 1, 1, 2, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 2, 0, 2, 1, 1, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ];
    board.init(b);
    var start = + new Date;
    //应该不能算出vct杀棋
    var p = c.vct(1, 10);
    console.log(p);
    console.log(`用时${+new Date - start}ms`);
    assert.ok(!p);
  });

});
